name: 'GCR Build and Push'
description: 'TODO'
inputs: 
  tags:
    description: 'Tags for the docker build defaults to latest, always tags with commit hash of the repo checkout.'
    required: false
    default: 'latest'
  project-id:
    description: 'The project id for the gcp cloud env'
    required: true
  container-name:
    description: 'The name of the container to build (most likely the repo name) will be implied from repo name if not set.'
    required: false
  GCR-key:
    description: 'GCP JSON key with the correct permissions e.x. secrets.GCP_credientials'
    required: false

outputs:
  image-name:
    description: 'TODO'
    value: ${{ steps.commit-image.outputs.name }}

runs:
  using: "composite"
  steps:
    - name: "Checkout repo"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: "Determine container name"
      id: container-name
      shell: bash
      run: echo "::set-output name=name::${{ inputs.container-name || '$(basename $(git rev-parse --show-toplevel))' }}"
    - name: "Build docker image URI"
      id: image-uri
      shell: bash
      run: echo "::set-output name=image-path::gcr.io/${{ inputs.project-id }}/${{ steps.container-name.outputs.name }}"
    - name: populate commit image tag
      id: commit-image
      shell: bash
      run: echo "::set-output name=name::${{ steps.image-uri.outputs.image-path }}:${{ github.sha }}"
    - name: "Build URI:tag csv"
      id: tags-csv
      uses: actions/github-script@v5
      env:
        IMAGE_URI: ${{ steps.image-uri.outputs.image-path }}
      with:
        result-encoding: string
        debug: true
        script: |
          var tags = function(str) {
            const arr = str.split(',');
            for (let i = 0; i < arr.length; i++) {
              arr[i] = arr[i].trim();
            }
            return arr;
          }(core.getInput('tags'))
          tags.push(context.sha)
          tags.map((tag) => {
            return process.env['IMAGE_URI'] + ':' + tag
          })
          var tagsStr = tags.join(',')//'
          console.log(tags);
          console.log(tagsStr);
          return tagsStr
    - name: GCR Docker Login
      uses: docker/login-action@v1
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ inputs.GCR-key }}
    - name: setup docker buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and Push
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ steps.tags-csv.outputs.result }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
